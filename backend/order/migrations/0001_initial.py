# Generated by Django 4.2.14 on 2024-08-18 20:58

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("client", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Base_Util",
            fields=[
                (
                    "base_util_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="베이스 유틸 고유 ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=10, verbose_name="베이스 유틸 코드명"),
                ),
                ("block_name", models.CharField(max_length=100, verbose_name="블록명")),
                (
                    "name_tag",
                    models.CharField(max_length=100, verbose_name="네이밍 태그"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Flavor_Util",
            fields=[
                (
                    "flavor_util_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="소스 유틸 고유 ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=10, verbose_name="소스 유틸 코드명"),
                ),
                ("block_name", models.CharField(max_length=100, verbose_name="블록명")),
                (
                    "name_tag",
                    models.CharField(max_length=100, verbose_name="네이밍 태그"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Meal",
            fields=[
                (
                    "meal_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="식단 유형 고유 ID",
                    ),
                ),
                ("group", models.CharField(max_length=50, verbose_name="식단 유형명")),
                ("normal_price", models.IntegerField(verbose_name="정상가")),
                ("subscript_price", models.IntegerField(verbose_name="구독가")),
                ("discount", models.IntegerField(verbose_name="할인액")),
                (
                    "discount_rate",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, null=True, verbose_name="할인율"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Nutrients",
            fields=[
                (
                    "nutrients_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="영양 성분 고유 ID",
                    ),
                ),
                (
                    "calories",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="에너지 (kcal)",
                    ),
                ),
                (
                    "carbohydrate",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="탄수화물 (g)",
                    ),
                ),
                (
                    "protein",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="단백질 (g)",
                    ),
                ),
                (
                    "sugar",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="총 당류 (g)",
                    ),
                ),
                (
                    "sodium",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="나트륨 (mg)",
                    ),
                ),
                (
                    "fat",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="지방 (g)",
                    ),
                ),
                (
                    "total_fatty_acids",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="총 포화 지방산 (g)",
                    ),
                ),
                (
                    "trans_fatty_acid",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="트랜스 지방산 (g)",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "order_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="주문 고유 ID",
                    ),
                ),
                (
                    "is_pickup",
                    models.BooleanField(default=False, verbose_name="픽업 유무"),
                ),
                ("delivery_dt", models.DateField(verbose_name="배송일자")),
                (
                    "create_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="신청일자"),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="client.client"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Price",
            fields=[
                (
                    "price_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="가격 고유 ID",
                    ),
                ),
                ("price", models.IntegerField(verbose_name="실제 원가")),
                ("selling_price", models.IntegerField(verbose_name="소비자가")),
            ],
        ),
        migrations.CreateModel(
            name="Veg_Util",
            fields=[
                (
                    "veg_util_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="채소 유틸 고유 ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=10, verbose_name="채소 유틸 코드명"),
                ),
                ("block_name", models.CharField(max_length=100, verbose_name="블록명")),
                (
                    "name_tag",
                    models.CharField(max_length=100, verbose_name="네이밍 태그"),
                ),
                (
                    "nutrients",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="order.nutrients",
                    ),
                ),
                (
                    "price",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="order.price"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pro_Util",
            fields=[
                (
                    "pro_util_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="단백 유틸 고유 ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=10, verbose_name="단백 유틸 코드명"),
                ),
                ("block_name", models.CharField(max_length=100, verbose_name="블록명")),
                (
                    "name_tag",
                    models.CharField(max_length=100, verbose_name="네이밍 태그"),
                ),
                (
                    "nutrients",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="order.nutrients",
                    ),
                ),
                (
                    "price",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="order.price"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "payment_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="결제 고유 ID",
                    ),
                ),
                ("amount", models.IntegerField(verbose_name="총 결제 금액")),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "초기 상태"),
                            (1, "결제 수단 인증 완료"),
                            (2, "가상계좌 입금 대기"),
                            (3, "결제 승인"),
                            (4, "결제 취소"),
                            (5, "결제 부분 취소"),
                            (6, "결제 승인 실패"),
                            (7, "시간 초과"),
                        ],
                        null=True,
                        verbose_name="결제 처리 상태",
                    ),
                ),
                (
                    "toss_order_id",
                    models.CharField(max_length=100, verbose_name="토스 주문 ID"),
                ),
                (
                    "customer_key",
                    models.CharField(
                        max_length=100, null=True, verbose_name="고객 KEY (정기 결제)"
                    ),
                ),
                (
                    "billing_key",
                    models.CharField(
                        max_length=100,
                        null=True,
                        verbose_name="카드 정보 암호화 KEY (정기 결제)",
                    ),
                ),
                (
                    "payment_key",
                    models.CharField(max_length=100, verbose_name="결제 KEY"),
                ),
                (
                    "request_dt",
                    models.DateTimeField(auto_now_add=True, verbose_name="요청일자"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="order.order"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order_Detail",
            fields=[
                (
                    "order_detail_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="주문 상세 고유 ID",
                    ),
                ),
                (
                    "day",
                    models.IntegerField(
                        choices=[
                            (0, "월요일"),
                            (1, "화요일"),
                            (2, "수요일"),
                            (3, "목요일"),
                            (4, "금요일"),
                            (5, "토요일"),
                        ],
                        verbose_name="요일",
                    ),
                ),
                (
                    "base_util",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="order.base_util",
                    ),
                ),
                (
                    "flavor_util",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="order.flavor_util",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="order.order"
                    ),
                ),
                (
                    "pro_util",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="order.pro_util"
                    ),
                ),
                (
                    "veg_util",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="order.veg_util"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Meal_Detail",
            fields=[
                (
                    "meal_detail_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="식단 유형 상세 고유 ID",
                    ),
                ),
                (
                    "day",
                    models.IntegerField(
                        choices=[
                            (0, "월요일"),
                            (1, "화요일"),
                            (2, "수요일"),
                            (3, "목요일"),
                            (4, "금요일"),
                            (5, "토요일"),
                        ],
                        verbose_name="요일",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(default=False, verbose_name="기본 요리 유무"),
                ),
                (
                    "base_util",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="order.base_util",
                    ),
                ),
                (
                    "flavor_util",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="order.flavor_util",
                    ),
                ),
                (
                    "meal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="order.meal"
                    ),
                ),
                (
                    "pro_util",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="order.pro_util"
                    ),
                ),
                (
                    "veg_util",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="order.veg_util"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="flavor_util",
            name="nutrients",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="order.nutrients"
            ),
        ),
        migrations.AddField(
            model_name="flavor_util",
            name="price",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="order.price"
            ),
        ),
        migrations.AddField(
            model_name="base_util",
            name="nutrients",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="order.nutrients"
            ),
        ),
        migrations.AddField(
            model_name="base_util",
            name="price",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="order.price"
            ),
        ),
    ]
